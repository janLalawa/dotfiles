# Import modules
Import-Module Terminal-Icons
Import-Module PSFzf
Import-Module z

# Initialize Oh-My-Posh
oh-my-posh init pwsh --config "$env:POSH_THEMES_PATH\atomic.omp.json" | Invoke-Expression

# Terminal-Icons theme
Set-TerminalIconsTheme -ColorTheme DevBlackOps -IconTheme Dev

# PSReadLine configuration
Import-Module PSReadLine
Set-PSReadLineOption -PredictionSource History
Set-PSReadLineOption -PredictionViewStyle ListView
Set-PSReadLineOption -EditMode Windows
Set-PSReadLineOption -Colors @{
    Command = [ConsoleColor]::Green
    Number = [ConsoleColor]::Yellow
    Member = [ConsoleColor]::Cyan
    Parameter = [ConsoleColor]::Cyan
    Type = [ConsoleColor]::Gray
    Variable = [ConsoleColor]::Red
    String = [ConsoleColor]::Yellow
}

# PSFzf configuration
Set-PsFzfOption -PSReadlineChordProvider 'Ctrl+f' -PSReadlineChordReverseHistory 'Ctrl+r'

# Path configurations
$env:PATH = "C:\Users\LauraMoore\.local\bin;$env:PATH"

# Useful aliases
Set-Alias vim nvim
Set-Alias ll Get-ChildItem
Set-Alias g git
Set-Alias grep findstr
function lvim { & "C:\Users\LauraMoore\.local\bin\lvim.ps1" $args }

# Useful functions
function which ($command) {
    Get-Command -Name $command -ErrorAction SilentlyContinue |
        Select-Object -ExpandProperty Path -ErrorAction SilentlyContinue
}

# Git shortcuts
function gs { git status }
function gaa { git add --all }
function gc($message) { git commit -m $message }
function gp { git push }
function gpl { git pull }

# Navigation shortcuts
function cd... { Set-Location ..\.. }
function cd.... { Set-Location ..\..\.. }

# Touch command like in Linux
function touch($file) { "" | Out-File $file -Encoding ASCII }

# Show current directory contents on cd
function cd_with_ls {
    param($path)
    Set-Location $path
    Get-ChildItem
}
Set-Alias -Name cd -Value cd_with_ls -Option AllScope

# Better Git experience
$env:TERM = "xterm-256color"
$env:GIT_PAGER = "less -FRX"

# Clear screen and show directory
Clear-Host
Get-ChildItem